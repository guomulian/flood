@charset 'utf-8';

@import 'normalize';
@import 'mixins';
@import 'variables';

* {
    @include transition($speed-transition-default);
}

html, body {
    font-family: $font-stack-text;
    font-size: $font-size-default;
}

h1, h2, h3, h4, h5, h6 {
    font-family: $font-stack-header;
}

button {
    &:hover,
    &:focus,
    &:active {
        @include scale-shadow($scale-default);
    }
}

fieldset {
    border: none;
}

.board {
    display: table;
    width: 100%;
    height: 100%;
}

.board-row {
    display: table-row;
}

.center-area {
    grid-area: main;

    min-height: $size-board-tiny;
    min-width: $size-board-tiny;
    
    @include respond-to('min-small') {
        height: $size-board-small;
        width: $size-board-small;
    }

    @include respond-to('min-medium') {
        height: $size-board-medium;
        width: $size-board-medium;
    }
}

.control-button {
    border-radius: 50%;
    border: 1px solid grey;
    font-size: $font-size-small;
    height: 60px;
    width: 60px;
    margin: 10px;

    @include respond-to('min-small') {
        font-size: $font-size-default;
        height: 40px;
        width: 40px;
        margin: 5px;
    }

    @include respond-to('min-medium') {
        font-size: $font-size-large;
        height: 60px;
        width: 60px;
    }
}

.counter {
    margin: 0;
    padding: 0;
    text-align: right;
    vertical-align: baseline;

    @include respond-to('min-small') {
        font-size: 1.5*$font-size-default;
    }

    @include respond-to('min-medium') {
        font-size: 1.75*$font-size-default;
    }
}

.full-width {
    width: 100%;
}

.header {
    margin: 0;
    font-size: $font-size-default;

    @include respond-to('min-small') {
        font-size: 1.5*$font-size-default;
    }

    @include respond-to('min-medium') {
        font-size: 2.5*$font-size-default;
    }
}

.inline-flex {
    display: inline-flex;
    justify-content: space-between;
    align-items: flex-end;
}

.instructions {
    color: #555555;
    font-size: $font-size-tiny;

    @include respond-to('min-small') {
        font-size: $font-size-small;
        min-width: 100px;
    }

    @include respond-to('min-medium') {
        font-size: $font-size-default;
        min-width: 100px;
    }
}

.options {
    font-size: $font-size-default;
    margin-top: 1.25rem;
    text-align: left;

    fieldset {
        margin-bottom: 30px;
        padding: 0;
    }

    input[type="radio"] {
        height: 0;
        width: 0;
        opacity: 0;

        &:checked + label {
            background-color: white;
            border: 1px solid #888888;
            color: black;
            opacity: 1;
            @include transition($speed-transition-default ease);
        }

        & + label {
            border-radius: 50px;
            font-size: 1.25*$font-size-large;
            opacity: 0.5;
            padding: 0.25rem 0.8rem;
        }

        &:hover + label,
        &:focus + label,
        &:active + label {
            @include scale-shadow(1.05);
            background-color: #ffffff;
            border: 1px solid #888888;
            opacity: 1;
        }
    }

    legend {
        font-family: $font-stack-text;
        font-size: $font-size-large;
        font-weight: bold;
        margin-bottom: 15px;
    }
}

.scheme {
    align-content: space-between;
    display: flex;
}

.scheme-tile {
    border: 1px solid #888888;
    border-radius: 50%;
    display: inline-block;
    height: 30px;
    margin: 10px 0;
    width: 30px;

    @include respond-to('min-small') {
        height: 50px;
        width: 50px;
    }
}

.select {
    width: 100%;
    padding: 10px;
}

.side-left {
    grid-area: left;
    justify-self: end;
    text-align: right;
}

.side-right {
    grid-area: right;
    justify-self: start;
    text-align: left;
}

.side-top {
    align-self: end;
    grid-area: top;
}

.side-bottom {
    grid-area: bottom;
    flex-wrap: wrap-reverse;
    justify-content: space-around;
}

.tile {
    display: table-cell;
}

.wrapper {
    align-content: stretch;
    display: grid;
    grid-column-gap: 10px;
    grid-row-gap: 10px;
    grid-template-columns: auto min-content auto;
    grid-template-rows: auto min-content auto;
    grid-template-areas:
            ". top ."
            "left main right"
            ". bottom .";
    margin: 30px auto;
    text-align: center;
    width: min-content;
}


/*
* Modal component taken from VueJS docs.
*/

.modal-mask {
  background-color: rgba(0, 0, 0, .5);
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  overflow: auto;
  z-index: 2;
}

.modal-container {
  background-color: #ffffff;
  border-radius: 10px;
  box-shadow: 0 2px 8px rgba(0, 0, 0, .33);
  margin: 10px auto;
  overflow: auto;
  position: relative;
  padding-top: 20px;
  padding-bottom: 10px;
  padding-right: 20px;
  padding-left: 30px;
  transition: all .3s ease;
  max-width: 400px;
}

.modal-header h2 {
  margin: auto 0;
}

.modal-body {
  margin: 20px 0;
}

.modal-header {
  display: inline-flex;
  justify-content: space-between;
  width: 100%;
}

.modal-default-button {
  background-color: rgba(0, 0, 0, 0);
  font-size: 18pt;
  height: 1em;
  width: 1em;
  display: flex;
  justify-content: center;
  align-items: center;
  margin: 0;

  &:hover,
  &:focus,
  &:active {
    color: grey;
  }
}

/*
 * The following styles are auto-applied to elements with
 * transition="modal" when their visibility is toggled
 * by Vue.js.
 *
 * You can easily play with the modal transition by editing
 * these styles.
 */

.modal-enter {
  opacity: 0;
}

.modal-leave-active {
  opacity: 0;
}


.modal-container {
    .modal-enter-active,
    .modal-leave-active {
        @include transition($speed-transition-default ease);
    }
}
